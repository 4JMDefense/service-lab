pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Running Build Stage'
                // Add any build steps here
            }
        }
        stage('Test') {
            steps {
                echo 'Running Test Stage'
                // Add test steps here
            }
        }
        stage('Security') {
            steps {
                script {
                    echo 'Running Security Stage (Vulnerability Scan)'
                    sh '''
                    # Create and activate a virtual environment using dot (.) instead of source
                    python3 -m venv venv
                    . venv/bin/activate
                    
                    # Upgrade pip and setuptools to address vulnerabilities
                    pip install --upgrade pip setuptools
                    
                    # Install and run Safety for vulnerability scanning
                    pip install safety
                    safety check
                    '''
                }
            }
        }
        stage('Package') {
            when {
                expression { env.GIT_BRANCH == 'origin/main' }
            }
            steps {
                withCredentials([string(credentialsId: 'DockerHub', variable: 'TOKEN')]) {
                    sh '''
                    # Log in to Docker Hub
                    sudo docker login -u jmdizon5 -p "$TOKEN" docker.io
                    
                    # Build Docker image
                    sudo docker build -t jmdizon5/receiver:latest -f receiver/dockerfile receiver
                    
                    # Push Docker image to Docker Hub
                    sudo docker push jmdizon5/receiver:latest
                    '''
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Running Deploy Stage'
                // Add deployment steps here
            }
        }
    }
}

